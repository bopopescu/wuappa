"""
Django settings for wuappa project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import datetime

from django.utils.translation import ugettext_lazy as _


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'Bruce Wayne is Batman'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    #'django.contrib.admin',
    'django.contrib.admin.apps.SimpleAdminConfig',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # Third party packages
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_docs',
    'django_filters',
    'corsheaders',
    'rest_auth',
    'allauth',
    'allauth.account',
    'rest_auth.registration',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'languages',
    'djmoney',
    'rangefilter',
    'djstripe',
    'modeltranslation',
    'push_notifications',
    'cities_light',
    'constance',
    'constance.backends.database',
    'adminplus',
    # Own packages
    'geo',
    'wuappa',
    'profiles',
    'services',
    'smsverification',
    'validations',
    'work_calendars',
    'coupon',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware'
]

ROOT_URLCONF = 'wuappa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates/'), os.path.join(BASE_DIR, 'wuappa/templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'wuappa.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = []


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Madrid'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Django REST Framework
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'drf_link_header_pagination.LinkHeaderPagination',
    'PAGE_SIZE': 100,
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.OrderingFilter',
        'rest_framework.filters.SearchFilter'
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
    ),
}
REST_FRAMEWORK_DOCS = {
    'HIDE_DOCS': os.environ.get('HIDE_DRFDOCS', False)
}


# Cities
# http://django-cities-light.readthedocs.io/en/stable-3.x.x/index.html
CITIES_LIGHT_APP_NAME = 'geo'
CITIES_LIGHT_INCLUDE_COUNTRIES = ['CH']

SITE_ID = 1

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

REST_USE_JWT = True

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = '/api/1.0/login/'
ACCOUNT_ADAPTER = 'profiles.adapter.AccountAdapter'

OLD_PASSWORD_FIELD_ENABLED = True   # To use old_password on change password.
LOGOUT_ON_PASSWORD_CHANGE = False   # To keep the user logged in after password change

JWT_AUTH = {
    'JWT_AUTH_HEADER_PREFIX': 'Token',  # To change word JWT in Authorization header
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=30),
    'JWT_ALLOW_REFRESH': True,
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=40),
    'JWT_PAYLOAD_HANDLER': 'wuappa.custom_jwt.jwt_payload_handler',  # To add information in token
}

# Custom registration for rest auth
REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'profiles.serializers.CustomRegisterSerializer',
}

REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'profiles.serializers.UserDetailsSerializer'
}

# Social login
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'
SOCIALACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_QUERY_EMAIL = True
SOCIALACCOUNT_ADAPTER = 'profiles.adapter.SocialAdapter'

# For upload avatar images
MEDIA_ROOT = os.path.join(BASE_DIR, "uploads/")
MEDIA_URL = "/uploads/"

# SMS Verification module settings
SMS_VERIFICATION = {
    'ENDPOINT': 'http://sms.smsbroker.net:11000/api/sendSMS.php',
    'USER': os.environ.get("SMS_USER"),
    'PASSWORD': os.environ.get("SMS_PASSWORD"),
    'SENDER_ID': 'Wuappa',
    'MESSAGE_TEMPLATE': _('Hello from Wuappa! Your verification code is {0}')
}

# Cors
CORS_ORIGIN_ALLOW_ALL = True


PUSH_NOTIFICATIONS_SETTINGS = {
    "FCM_API_KEY": os.environ.get("FCM_API_KEY"),
    "APNS_CERTIFICATE": os.environ.get("APNS_CERTIFICATE"),
    "APNS_TOPIC": os.environ.get("APNS_TOPIC"),
    "UPDATE_ON_DUPLICATE_REG_ID": True
}


CURRENCIES = ('CHF', 'EUR')

LANGUAGES = (
    ("en", _("English")),
    ("fr", _("French")),
)

# Django constance
CONSTANCE_BACKEND = 'constance.backends.database.DatabaseBackend'

CONSTANCE_CONFIG = {
    'DEFAULT_PROFESSIONAL_FEE': (10, _('Default professional fee applied.')),
}

LOCALE_PATHS = [os.path.join(BASE_DIR, "locale/")]
